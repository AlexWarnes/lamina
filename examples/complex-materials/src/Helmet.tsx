/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState } from 'react'
import { useGLTF, OrthographicCamera, Center, Sphere, Tetrahedron, Octahedron, Plane } from '@react-three/drei'
import { DebugLayerMaterial, Depth, Displace, Fresnel, Gradient, LayerMaterial, Noise } from 'lamina'
import { AdditiveBlending, DoubleSide, Mesh, MultiplyBlending, SphereGeometry } from 'three'
import { useFrame } from '@react-three/fiber'
import { LayerMaterial as LayerMaterialType, Displace as DisplaceType } from 'lamina/vanilla'
import { useBox, useConvexPolyhedron, useSphere } from '@react-three/cannon'

export default function Model(props: any) {
  const group = useRef()
  const { nodes, materials } = useGLTF('/lighting_bunny_copy.gltf') as any

  const [ref] = useSphere(() => ({}))

  return (
    <group ref={group} dispose={null}>
      <mesh ref={ref} scale={0.01} castShadow receiveShadow geometry={nodes.Bunny.geometry}>
        {/* @ts-ignore */}
        <LayerMaterial color={'#718EFF'} lighting={'physical'} envMapIntensity={0.3}>
          <Depth near={1.14} far={0.5} origin={[0, -0.43700000000000017, 0]} colorA={'#7d97fe'} colorB={'#ebebeb'} />
          <Depth far={1.7} origin={[0, 1, 0]} colorA={'#5688ee'} colorB={'#fefefe'} alpha={0.7} mode={'multiply'} />
          <Depth
            near={1.14}
            far={0.9449999999999992}
            origin={[0.5200000000000002, -0.2900000000000002, -0.18999999999999995]}
            colorA={'#f1f1f1'}
            colorB={'#fe7ef5'}
            alpha={0.7}
            mode={'multiply'}
          />
          <Fresnel color={'#f77f7f'} mode={'screen'} />
          <Noise
            colorA={'#fefefe'}
            colorB={'#a8a8a8'}
            colorC={'#fefefe'}
            colorD={'#fefefe'}
            alpha={0.59}
            scale={0.016999999999999977}
            offset={[0, 0, 0]}
            name={'noise'}
            mode={'subtract'}
          />
        </LayerMaterial>
      </mesh>
    </group>
  )
}

useGLTF.preload('/lighting_bunny_copy.gltf')
